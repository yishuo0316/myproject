C51 COMPILER V9.60.0.0   MAIN                                                              07/03/2025 18:40:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\obj\main.obj
COMPILER INVOKED BY: D:\KEIL\KEIL_MDK\C51\BIN\C51.EXE ..\code\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\code;..\user) DE
                    -BUG OBJECTEXTEND PRINT(.\main.lst) TABS(2) OBJECT(..\obj\main.obj)

line level    source

   1          /******************************************************
   2          **  工程名称：UNV-01语音识别模块驱动程序
   3          **  CPU: STC11L08XE
   4          **  晶振：22.1184MHZ
   5          **  波特率：9600 bit/S
   6          **  配套产品信息：UNV-LD3320+STC11语音识别开发板
   7          **  修改日期：2018.5.13
   8          **  说明：口令模式： 即每次识别时都需要说“小鹰”这个口令 ，才能够进行下一级的识别
   9          ***************************/
  10          #include "config.h"
  11          /************************************************************************************/
  12          //  nAsrStatus 用来在main主程序中表示程序运行的状态，不是LD3320芯片内部的状态寄存器
  13          //  LD_ASR_NONE:    表示没有在作ASR识别
  14          //  LD_ASR_RUNING：   表示LD3320正在作ASR识别中
  15          //  LD_ASR_FOUNDOK:   表示一次识别流程结束后，有一个识别结果
  16          //  LD_ASR_FOUNDZERO: 表示一次识别流程结束后，没有识别结果
  17          //  LD_ASR_ERROR:   表示一次识别流程中LD3320芯片内部出现不正确的状态
  18          /***********************************************************************************/
  19          uint8 idata nAsrStatus=0; 
  20          void MCU_init(); 
  21          void ProcessInt0(); //识别处理函数
  22          void delay(unsigned long uldata);
  23          void User_handle(uint8 dat);//用户执行操作函数
  24          void Delay200ms();
  25          void Led_test(void);//单片机工作指示
  26          uint8_t G0_flag=DISABLE;//运行标志，ENABLE:运行。DISABLE:禁止运行 
  27          sbit LED=P4^2;//信号指示灯
  28          
  29          /***********************************************************
  30          * 名    称： void  main(void)
  31          * 功    能： 主函数 程序入口
  32          * 入口参数：  
  33          * 出口参数：
  34          * 说    明：           
  35          * 调用方法： 
  36          **********************************************************/ 
  37          void  main(void)
  38          {
  39   1        uint8 idata nAsrRes;
  40   1        uint8 i=0;
  41   1        Led_test();
  42   1        MCU_init();
  43   1        LD_Reset();
  44   1        UartIni(); /*串口初始化*/
  45   1        nAsrStatus = LD_ASR_NONE;   //  初始状态：没有在作ASR
  46   1        
  47   1        #ifdef TEST 
  48   1        PrintCom("一级口令：小鹰\r\n"); /*text.....*/
  49   1        PrintCom("二级口令：1、中国\r\n"); /*text.....*/
  50   1        PrintCom("  2、哈尔滨\r\n"); /*text.....*/
  51   1        PrintCom("  3、全球鹰电子\r\n"); /*text.....*/
  52   1        PrintCom("  4、欢迎你\r\n"); /*text.....*/
  53   1        PrintCom("  5、开灯\r\n"); /*text.....*/
  54   1        PrintCom("  6、关灯\r\n"); /*text.....*/
C51 COMPILER V9.60.0.0   MAIN                                                              07/03/2025 18:40:35 PAGE 2   

  55   1        PrintCom("  7、晚安\r\n"); /*text.....*/
  56   1        #endif
  57   1      
  58   1        while(1)
  59   1        {
  60   2          switch(nAsrStatus)
  61   2          {
  62   3            case LD_ASR_RUNING:
  63   3            case LD_ASR_ERROR:    
  64   3              break;
  65   3            case LD_ASR_NONE:
  66   3            {
  67   4              nAsrStatus=LD_ASR_RUNING;
  68   4              if (RunASR()==0)  /*  启动一次ASR识别流程：ASR初始化，ASR添加关键词语，启动ASR运算*/
  69   4              {
  70   5                nAsrStatus = LD_ASR_ERROR;
  71   5              }
  72   4              break;
  73   4            }
  74   3            case LD_ASR_FOUNDOK: /* 一次ASR识别流程结束，去取ASR识别结果*/
  75   3            {       
  76   4              nAsrRes = LD_GetResult();   /*获取结果*/
  77   4              User_handle(nAsrRes);//用户执行函数 
  78   4              nAsrStatus = LD_ASR_NONE;
  79   4              break;
  80   4            }
  81   3            case LD_ASR_FOUNDZERO:
  82   3            default:
  83   3            {
  84   4              nAsrStatus = LD_ASR_NONE;
  85   4              break;
  86   4            }
  87   3          }// switch        
  88   2        }// while
  89   1      
  90   1      }
  91          /***********************************************************
  92          * 名    称：   LED灯测试
  93          * 功    能： 单片机是否工作指示
  94          * 入口参数： 无 
  95          * 出口参数：无
  96          * 说    明：           
  97          **********************************************************/
  98          void Led_test(void)
  99          {
 100   1        LED=~ LED;
 101   1        Delay200ms();
 102   1        LED=~ LED;
 103   1        Delay200ms();
 104   1        LED=~ LED;
 105   1        Delay200ms();
 106   1        LED=~ LED;
 107   1      }
 108          /***********************************************************
 109          * 名    称： void MCU_init()
 110          * 功    能： 单片机初始化
 111          * 入口参数：  
 112          * 出口参数：
 113          * 说    明：           
 114          * 调用方法： 
 115          **********************************************************/ 
 116          void MCU_init()
C51 COMPILER V9.60.0.0   MAIN                                                              07/03/2025 18:40:35 PAGE 3   

 117          {
 118   1        P0 = 0xff;
 119   1        P1 = 0xff;
 120   1        P2 = 0xff;
 121   1        P3 = 0xff;
 122   1        P4 = 0xff;
 123   1        
 124   1      
 125   1        LD_MODE = 0;    //  设置MD管脚为低，并行模式读写
 126   1        IE0=1;
 127   1        EX0=1;
 128   1        EA=1;
 129   1      }
 130          /***********************************************************
 131          * 名    称：  延时函数
 132          * 功    能：
 133          * 入口参数：  
 134          * 出口参数：
 135          * 说    明：           
 136          * 调用方法： 
 137          **********************************************************/ 
 138          void Delay200us()   //@22.1184MHz
 139          {
 140   1        unsigned char i, j;
 141   1        _nop_();
 142   1        _nop_();
 143   1        i = 5;
 144   1        j = 73;
 145   1        do
 146   1        {
 147   2          while (--j);
 148   2        } while (--i);
 149   1      }
 150          
 151          void  delay(unsigned long uldata)
 152          {
 153   1        unsigned int j  =  0;
 154   1        unsigned int g  =  0;
 155   1        while(uldata--)
 156   1        Delay200us();
 157   1      }
 158          
 159          void Delay200ms()   //@22.1184MHz
 160          {
 161   1        unsigned char i, j, k;
 162   1      
 163   1        i = 17;
 164   1        j = 208;
 165   1        k = 27;
 166   1        do
 167   1        {
 168   2          do
 169   2          {
 170   3            while (--k);
 171   3          } while (--j);
 172   2        } while (--i);
 173   1      }
 174          
 175          /***********************************************************
 176          * 名    称： 中断处理函数
 177          * 功    能：
 178          * 入口参数：  
C51 COMPILER V9.60.0.0   MAIN                                                              07/03/2025 18:40:35 PAGE 4   

 179          * 出口参数：
 180          * 说    明：           
 181          * 调用方法： 
 182          **********************************************************/ 
 183          void ExtInt0Handler(void) interrupt 0  
 184          {   
 185   1        ProcessInt0();        
 186   1      }
 187          /***********************************************************
 188          * 名    称：用户执行函数 
 189          * 功    能：识别成功后，执行动作可在此进行修改 
 190          * 入口参数： 无 
 191          * 出口参数：无
 192          * 说    明：           
 193          **********************************************************/
 194          void  User_handle(uint8 dat)
 195          {
 196   1           //UARTSendByte(dat);//串口识别码（十六进制）
 197   1           if(0==dat)
 198   1           {
 199   2            G0_flag=ENABLE;
 200   2            LED=0;
 201   2            PrintCom("收到\r\n"); /*text.....*/
 202   2           }
 203   1           else if(ENABLE==G0_flag)
 204   1           {  
 205   2              G0_flag=DISABLE;
 206   2              LED=1;
 207   2             switch(dat)       /*对结果执行相关操作,客户可删除Printcom 串口输出语句替换为其他需要控制的代码*/
 208   2              {
 209   3                case 1: 
 210   3                  PrintCom("“扳手”命令识别成功\r\n"); /*text.....*/
 211   3                                 break;
 212   3                case 2:         
 213   3                  PrintCom("“螺丝刀”命令识别成功\r\n"); /*text.....*/
 214   3                                break;
 215   3                case 3:         
 216   3                  PrintCom("“游标卡尺”命令识别成功\r\n"); /*text.....*/
 217   3                                break;
 218   3                case 4:           
 219   3                  PrintCom("“钳子”命令识别成功\r\n"); /*text.....*/
 220   3                                break;
 221   3                case 5:           
 222   3                  PrintCom("“锤子”命令识别成功\r\n"); /*text.....*/
 223   3                                break;
 224   3                case 6:         
 225   3                  PrintCom("“卷尺”命令识别成功\r\n"); /*text.....*/
 226   3                                break;                        
 227   3                case 7:         
 228   3                  PrintCom("“万用表”命令识别成功\r\n"); /*text.....*/
 229   3                                break;                                
 230   3                 case 8:          
 231   3                  PrintCom("“锉刀”命令识别成功\r\n"); /*text.....*/
 232   3                                break;                                
 233   3                 case 9:          
 234   3                  PrintCom("“塞尺”命令识别成功\r\n"); /*text.....*/
 235   3                                break;                                
 236   3                 case 10:         
 237   3                  PrintCom("“护目镜”命令识别成功\r\n"); /*text.....*/
 238   3                                break;                                    
 239   3                    default:PrintCom("请重新识别发口令\r\n"); /*text.....*/break;
 240   3              } 
C51 COMPILER V9.60.0.0   MAIN                                                              07/03/2025 18:40:35 PAGE 5   

 241   2            } 
 242   1            else  
 243   1            {
 244   2              PrintCom("请说出一级口令\r\n"); /*text.....*/ 
 245   2            }
 246   1      }  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    490    ----
   CONSTANT SIZE    =    397    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      10
   IDATA SIZE       =      1       1
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
